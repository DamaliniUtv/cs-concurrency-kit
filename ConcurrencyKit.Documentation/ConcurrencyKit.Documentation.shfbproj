<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which
         assemblies to include from solution and project documentation
         sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{87c7f8f0-55c6-4956-8a99-7e7ba9811f72}</ProjectGuid>
    <SHFBSchemaVersion>1.9.5.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual
         Studio adds them anyway -->
    <AssemblyName>ConcurrencyKit.Documentation</AssemblyName>
    <RootNamespace>ConcurrencyKit.Documentation</RootNamespace>
    <Name>ConcurrencyKit.Documentation</Name>
    <!-- SHFB properties -->
    <OutputPath>.\Help\</OutputPath>
    <HtmlHelpName>ConcurrencyKit.Documentation</HtmlHelpName>
    <Language>en-US</Language>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\System.Threading\bin\Release\System.Threading.dll" />
      <DocumentationSource sourceFile="..\System.Threading\bin\Release\System.Threading.xml" />
      <DocumentationSource sourceFile="..\SpicyPixel.Threading\bin\Release\SpicyPixel.Threading.dll" />
      <DocumentationSource sourceFile="..\SpicyPixel.Threading\bin\Release\SpicyPixel.Threading.xml" />
      <DocumentationSource sourceFile="..\SpicyPixel.Threading.Unity\bin\Release\SpicyPixel.Threading.Unity.dll" />
      <DocumentationSource sourceFile="..\SpicyPixel.Threading.Unity\bin\Release\SpicyPixel.Threading.Unity.xml" />
    </DocumentationSources>
    <BuildAssemblerVerbosity>AllMessages</BuildAssemblerVerbosity>
    <HelpFileFormat>HtmlHelp1, Website</HelpFileFormat>
    <IndentHtml>False</IndentHtml>
    <FrameworkVersion>.NET Framework 3.5</FrameworkVersion>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <CppCommentsFixup>False</CppCommentsFixup>
    <CleanIntermediates>True</CleanIntermediates>
    <SyntaxFilters>CSharp, JScript</SyntaxFilters>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <RootNamespaceContainer>True</RootNamespaceContainer>
    <PresentationStyle>vs2010</PresentationStyle>
    <Preliminary>False</Preliminary>
    <NamingMethod>MemberName</NamingMethod>
    <HelpTitle>Concurrency Kit Documentation</HelpTitle>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
    <FeedbackEMailAddress>docs%40spicypixel.com</FeedbackEMailAddress>
    <CopyrightText>Copyright %28c%29 2012 Spicy Pixel</CopyrightText>
    <CopyrightHref>http://spicypixel.com</CopyrightHref>
    <FeedbackEMailLinkText>Spicy Pixel</FeedbackEMailLinkText>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="System" isDocumented="True">The System namespace contains fundamental classes and base classes that define commonly-used value and reference data types, events and event handlers, interfaces, attributes, and processing exceptions.

Other classes provide services supporting data type conversion, method parameter manipulation, mathematics, remote and local program invocation, application environment management, and supervision of managed and unmanaged applications.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="System.Collections" isDocumented="True">The System.Collections namespace contains interfaces and classes that define various collections of objects, such as lists, queues, bit arrays, hash tables and dictionaries.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="System.Collections.Concurrent" isDocumented="True">The System.Collections.Concurrent namespace provides several thread-safe collection classes that should be used in place of the corresponding types in the System.Collections and System.Collections.Generic namespaces whenever multiple threads are accessing the collection concurrently.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="System.Runtime.CompilerServices" isDocumented="True">The System.Runtime.CompilerServices namespace provides functionality for compiler writers who use managed code to specify attributes in metadata that affect the run-time behavior of the common language runtime.

This namespace is primarily for compiler writers, although several of its classes, such as InternalsVisibleToAttribute, are used in a wide variety of applications.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="System.Threading" isDocumented="True">The System.Threading namespace provides classes and interfaces that enable multithreaded programming. In addition to classes for synchronizing thread activities and access to data (Mutex, Monitor, Interlocked, AutoResetEvent, and so on), this namespace includes a ThreadPool class that allows you to use a pool of system-supplied threads, and a Timer class that executes callback methods on thread pool threads.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="System.Threading.Tasks" isDocumented="True">The System.Threading.Tasks namespace provides types that simplify the work of writing concurrent and asynchronous code. The main types are Task which represents an asynchronous operation that can be waited on and cancelled, and Task{TResult}, which is a task that can return a value. The Factory class provides static methods for creating and starting tasks, and the TaskScheduler class provides the default thread scheduling infrastructure.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="SpicyPixel.Threading" isDocumented="True">The SpicyPixel.Threading namespace provides classes and interfaces that enable multithreaded programming using fibers.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="SpicyPixel.Threading.Tasks" isDocumented="True">The SpicyPixel.Threading.Tasks namespace provides types that simplify the work of writing concurrent and asynchronous code. The main type is YieldableTask which represents an asynchronous operation that can be waited on, yielded within, and cancelled. The FiberTaskScheduler class provides the default fiber scheduling infrastructure.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="(global)" isDocumented="False">The default or global namespace contains types visible to the Unity inspector.</NamespaceSummaryItem>
    </NamespaceSummaries>
    <ProjectSummary>The Concurrency Kit is a .NET/Mono kit that includes a port of the Task Parallel Library and extends it to support Fibers, Coroutines, and Unity. Fibers allow code paths to execute concurrently using a single thread by leveraging the co-operative yielding behavior of coroutines.</ProjectSummary>
    <MissingTags>AutoDocumentCtors, AutoDocumentDispose</MissingTags>
    <ApiFilter />
    <ComponentConfigurations />
    <HelpAttributes />
    <PlugInConfigurations />
    <BuildLogFile />
    <HtmlHelp1xCompilerPath />
    <HtmlHelp2xCompilerPath />
    <SandcastlePath />
    <WorkingPath />
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in
       order for Visual Studio to perform the build.  The others are optional
       common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <ItemGroup>
    <ContentLayout Include="Content Layout.content" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Key Concepts\Fiber Tasks.aml" />
    <None Include="Key Concepts\Fibers.aml" />
    <None Include="Key Concepts\Unity Integration.aml" />
    <None Include="Overview.aml" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Media" />
    <Folder Include="Key Concepts" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="Media\Features.png">
      <ImageId>Features</ImageId>
      <AlternateText>Features</AlternateText>
      <CopyToMedia>True</CopyToMedia>
    </Image>
    <Image Include="Media\Packages.png">
      <ImageId>Packages</ImageId>
      <AlternateText>Packages</AlternateText>
      <CopyToMedia>True</CopyToMedia>
    </Image>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>References\UnityEngine.dll</HintPath>
    </Reference>
  </ItemGroup>
  <!-- Import the SHFB build targets -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
</Project>